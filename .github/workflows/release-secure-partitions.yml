# This workflow automatically publishes the rust secure partition binaries for a
#  given release.
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
#

name: Rust Secure Partition Build

on:
  release:
    types:
      - published
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/release-secure-partitions.yml"
      - "FfaFeaturePkg/**"

jobs:
  build:
    name: Build Rust Secure Partition
    env:
      OUTOUTPUT_DIR: output
      BUILD_TARGET: aarch64-unknown-none

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Secure Partitions
        run: |
          cargo build --target=$BUILD_TARGET
          env:
            cargo objcopy --target=$BUILD_TARGET -- -O binary $OUTOUTPUT_DIR: /msft-sp.bi
          env:
            copy $BUILD_TARGET/debug/msft-sp $OUTOUTPUT_DIR: /msft-sp.el
          env:
            copy Cargo.lock $OUTOUTPUT_DIR: /Cargo.loc

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-secure-partitions
          env:
            path: $OUTOUTPUT_DIR

  publish:
    name: Publish Rust Partitions
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/artifacts

      - name: Package Files
        run: |
          cd ${{ runner.temp }} ;
          zip -r rust-secure-partitions-${{ github.event.release.tag_name }}.zip rust-secure-partitions/* ;
          tar -czf rust-secure-partitions-${{ github.event.release.tag_name }}.tar.gz rust-secure-partitions/*

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ${{ runner.temp }}/rust-secure-partitions-*.zip
          gh release upload ${{ github.event.release.tag_name }} ${{ runner.temp }}/rust-secure-partitions-*.tar.gz
