# This workflow automatically publishes the rust secure partition binaries for a
#  given release.
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
#

name: Rust Secure Partition Build

on:
  release:
    types:
      - published
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/release-secure-partitions.yml"
      - "FfaFeaturePkg/**"

jobs:
  build:
    name: Build Rust Secure Partition
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            output_dir: "output"
            target: "aarch64-unknown-none"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Linux Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi g++-aarch64-linux-gnu g++-arm-linux-gnueabi
          echo "GCC5_AARCH64_PREFIX=/usr/bin/aarch64-linux-gnu-" >> "$GITHUB_ENV"
          echo "GCC5_ARM_PREFIX=/usr/bin/arm-linux-gnueabi-" >> "$GITHUB_ENV"

      - name: Build Secure Partitions
        run: |
          cargo build --target=${{ matrix.target }}
          cargo objcopy --target=${{ matrix.target }} -- -O binary ${{ matrix.output_dir }}/msft-sp.bin
          copy ${{ matrix.target }}/debug/msft-sp ${{ matrix.output_dir }}/msft-sp.elf

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-secure-partitions
          path: ${{ matrix.output_dir }}

  publish:
    name: Publish Rust Partitions
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/artifacts

      - name: Package Files
        run: |
          cd ${{ runner.temp }} ;
          zip -r rust-secure-partitions-${{ github.event.release.tag_name }}.zip rust-secure-partitions/* ;
          tar -czf rust-secure-partitions-${{ github.event.release.tag_name }}.tar.gz rust-secure-partitions/*

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ${{ runner.temp }}/rust-secure-partitions-*.zip
          gh release upload ${{ github.event.release.tag_name }} ${{ runner.temp }}/rust-secure-partitions-*.tar.gz
